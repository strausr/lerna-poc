import cloneDeep from 'lodash/cloneDeep';
import { render } from '../utils/render';
var HtmlImageLayer = /** @class */ (function () {
    function HtmlImageLayer(element, userCloudinaryImage, plugins) {
        var _this = this;
        this.imgElement = element;
        this.htmlPluginState = { cleanupCallbacks: [], pluginEventSubscription: [] };
        var pluginCloudinaryImage = cloneDeep(userCloudinaryImage);
        render(element, pluginCloudinaryImage, plugins, this.htmlPluginState)
            .then(function () {
            _this.htmlPluginState.pluginEventSubscription.forEach(function (fn) { fn(); });
            _this.imgElement.setAttribute('src', pluginCloudinaryImage.toURL());
        });
    }
    /**
     * Called when component is updated and re-triggers render
     * @param userCloudinaryImage
     * @param plugins
     */
    HtmlImageLayer.prototype.update = function (userCloudinaryImage, plugins) {
        var _this = this;
        var pluginCloudinaryImage = cloneDeep(userCloudinaryImage);
        render(this.imgElement, pluginCloudinaryImage, plugins, this.htmlPluginState)
            .then(function () {
            _this.imgElement.setAttribute('src', pluginCloudinaryImage.toURL());
        });
    };
    return HtmlImageLayer;
}());
export { HtmlImageLayer };
