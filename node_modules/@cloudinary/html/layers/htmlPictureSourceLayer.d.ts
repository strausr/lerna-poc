import { CloudinaryImage } from "@cloudinary/url-gen";
export declare class HtmlPictureSourceLayer {
    image: CloudinaryImage;
    minWidth: number;
    maxWidth: number;
    sizes: string;
    autoOptimalBreakpoints: boolean;
    breakpoints: number[];
    relativeWidth: number;
    constructor(image: CloudinaryImage, minWidth: number, maxWidth: number, sizes: string, autoOptimalBreakpoints?: boolean, breakpoints?: number[], relativeWidth?: number);
    toTag(): HTMLSourceElement;
    /**
     * @description Sets Source element's media attribute
     * @param source {HTMLSourceElement} Source element
     */
    setMedia(source: HTMLSourceElement): void;
    /**
     * @description Sets Source element's size attribute
     * @param source {HTMLSourceElement} Source element
     */
    setSize(source: HTMLSourceElement): void;
    /**
     * @description Generates Source element srcset attribute
     * @param source {HTMLSourceElement} Source element
     */
    generateSrcsetUrl(source: HTMLSourceElement): void;
    /**
      * @description An array of breakpoints is calculated and returned based on the
      * predefined constants in screenWidths
      * See conditions bellow
      */
    getBreakPoints(): number[];
    /**
     * @description Returns the physical dimensions
     */
    getPhysicalDimension(): number[];
    /**
     * @description If dimension is less than default DPR threshold we multiply by 2
     * @param dimension {number} Estimates DPR bases on max and min width
     */
    getDprDimension(dimension: number): number;
}
