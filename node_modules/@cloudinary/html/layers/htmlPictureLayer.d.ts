import { CloudinaryImage } from "@cloudinary/url-gen";
import { PictureSources, PictureSource } from '../types';
export declare class HtmlPictureLayer {
    pictureElement: HTMLPictureElement;
    constructor(element: HTMLPictureElement | null, userCloudinaryImage: CloudinaryImage, breakpoints?: number[], sources?: PictureSources, autoOptimalBreakpoints?: boolean, relativeWidth?: number);
    /**
     * @description Sets image tag based on user's Cloudinary image input
     * @param userCloudinaryImage {CloudinaryImage} Cloudinary image instance
     */
    setImageTag(userCloudinaryImage: CloudinaryImage): void;
    /**
     * @description Calls HtmlPictureSourceLayer to set the source tag bases on user's input
     * @param breakpoints {number[]} User's breakpoint array.
     * @param sourceInput {PictureSource} Source input passed in by user.
     * @param autoOptimalBreakpoints {boolean} boolean to turn on auto optimal breakpoint generation. Default set to
     * false
     * @param relativeWidth {number} Floating point number from: 0 to 1. Default set to 1
     */
    setSourceTag(breakpoints?: number[], sourceInput?: PictureSource, autoOptimalBreakpoints?: boolean, relativeWidth?: number): void;
    /**
     * @description Called when component is updated.
     * @param updatedCloudinaryImage {CloudinaryImage} Updated Cloudinary image instance
     * @param breakpoints
     * @param sources {HTMLSourceElement} Source element
     * @param autoOptimalBreakpoints {boolean} boolean to turn on auto optimal breakpoint generation. Default set to
     * @param relativeWidth {number} Floating point number from: 0 to 1. Default set to 1
     */
    update(updatedCloudinaryImage: CloudinaryImage, breakpoints?: number[], sources?: PictureSources, autoOptimalBreakpoints?: boolean, relativeWidth?: number): void;
}
